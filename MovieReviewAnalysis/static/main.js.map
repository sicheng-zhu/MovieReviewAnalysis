{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// This class processes data in front end.\nexport class AppComponent {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private _http:HttpClient) {}\n\n  explanation = 'Please type movie review below, and click Check button.';\n  rr:ReviewResult = new ReviewResult();\n\n  // After user click the Check button, show user's review on web page, and send review to backend as well.\n  click(review:string) {\n    this.rr.review = \"Your movie review is \" + review;\n    this.rr.classification = \"Analyzing. It will be shown here soon.\";\n    this.sendResult(review);\n  }\n\n  // This function sends user's review by post request to backend, and receive polarization analysis result.\n  sendResult(review:string) {\n    const body = {\"review\": review};\n\n    return this._http.post(\"./processInput\", body, this.httpOptions)\n     .subscribe(data => {\n       this.rr.classification = data[\"classification\"];\n      },\n     error => {\n       console.log(error);\n      },() => {\n       console.log(\"The Post observable is now completed.\");\n     });\n  }\n}\n\nexport class ReviewResult {\n  review:string;\n  classification:string;\n}\n","<!-- Data interaction portion of front end page. -->\n<div class=\"text-center\">\n  <p class=\"h3 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">Movie Review Polarization Analysis</p>\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{explanation}}</p>\n\n  <textarea class=\"col-11 col-sm-4 col-md-4 col-lg-4 col-xl-4\" rows=\"4\" cols=\"50\" type=\"text\" style=\"font-size: 10pt\" placeholder=\"e.g. Quite possibly the best movie ever made.\" #reviewInput></textarea>\n\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{rr.review}}</p>\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{rr.classification}}</p>\n\n  <div class=\"clearfix\"></div>\n  <p></p>\n  <button class=\"btn btn-primary text-center btn-lg\" type=\"submit\" (click)=\"click(reviewInput.value)\">Check</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}