{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_http","httpOptions","headers","explanation","rr","ReviewResult","review","classification","sendResult","body","post","subscribe","data","error","console","log","click","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// This class processes data in front end.\nexport class AppComponent {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private _http:HttpClient) {}\n\n  explanation = 'Please type movie review below, and click Check button.';\n  rr:ReviewResult = new ReviewResult();\n\n  // After user click the Check button, show user's review on web page, and send review to backend as well.\n  click(review:string) {\n    this.rr.review = \"Your movie review is \" + review;\n    this.rr.classification = \"Analyzing. It will be shown here soon.\";\n    this.sendResult(review);\n  }\n\n  // This function sends user's review by post request to backend, and receive polarization analysis result.\n  sendResult(review:string) {\n    const body = {\"review\": review};\n\n    return this._http.post(\"./processInput\", body, this.httpOptions)\n     .subscribe(data => {\n       this.rr.classification = data[\"classification\"];\n      },\n     error => {\n       console.log(error);\n      },() => {\n       console.log(\"The Post observable is now completed.\");\n     });\n  }\n}\n\nexport class ReviewResult {\n  review:string;\n  classification:string;\n}\n","<!-- Data interaction portion of front end page. -->\n<div class=\"text-center\">\n  <p class=\"h3 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">Movie Review Polarization Analysis</p>\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{explanation}}</p>\n\n  <textarea class=\"col-11 col-sm-4 col-md-4 col-lg-4 col-xl-4\" rows=\"4\" cols=\"50\" type=\"text\" style=\"font-size: 10pt\" placeholder=\"e.g. Quite possibly the best movie ever made.\" #reviewInput></textarea>\n\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{rr.review}}</p>\n  <p class=\"h5 text-center col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">{{rr.classification}}</p>\n\n  <div class=\"clearfix\"></div>\n  <p></p>\n  <button class=\"btn btn-primary text-center btn-lg\" type=\"submit\" (click)=\"click(reviewInput.value)\">Check</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}